source('P:/Git/GCMRC/GCtoLCRver4forTuning.R', echo=TRUE)
source('P:/Git/GCMRC/GCtoLCRver4forTuning.R', echo=TRUE)
res
source('P:/Git/GCMRC/GCtoLCRver4forTuning.R', echo=TRUE)
warnings()
source('P:/Git/GCMRC/GCtoLCRver4forTuning.R', echo=TRUE)
res
optim(parms,tune,method='Brent',lower=1,upper=30,control=list(trace=TRUE))
res=optim(parms,tune,method='BFGS',control=list(trace=TRUE))
source('P:/Git/GCMRC/GCtoLCRver4forTuning.R', echo=TRUE)
res
source('~/.active-rstudio-document', echo=TRUE)
res$par
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('P:/Git/GCMRC/GCtoLCRver3.R', echo=TRUE)
?case
?select
?if
then
?ifthen
??ifthen
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
install.packages("memisc")
source('~/.active-rstudio-document', echo=TRUE)
test=5
source('P:/Git/GCMRC/GCtoLCRver3.R', echo=TRUE)
fun <- function(x)
cases(
x==0      -> 1,
abs(x)> 1 -> abs(x),
abs(x)<=1 -> x^2
)
x <- seq(from=-2,to=2,length=101)
plot(fun(x)~x)
#this functions figures out the number of MR trips based on the september abundance (x)
getnumtrips=function(x){
y=lf2lcrFixedPars$MrTrigvec
cases(
x<y[1]->0
x>=y[1] &x<y[3]->2
x>=y[3] &x<y[4]->3
x>=y[4] &x<y[5]->4
x>=y[5] &x<y[6]->5
x>=y[6] ->6
)
}
getnumtrips=function(x){
y=lf2lcrFixedPars$MrTrigvec
cases(
x<y[1]->0,
x>=y[1] &x<y[3]->2,
x>=y[3] &x<y[4]->3,
x>=y[4] &x<y[5]->4,
x>=y[5] &x<y[6]->5,
x>=y[6] ->6,
)
}
getnumtrips=function(x){
y=lf2lcrFixedPars$MrTrigvec
cases(
x<y[1]=0,
x>=y[1] &x<y[3]->2,
x>=y[3] &x<y[4]->3,
x>=y[4] &x<y[5]->4,
x>=y[5] &x<y[6]->5,
x>=y[6] ->6,
)
}
getnumtrips=function(x){
y=lf2lcrFixedPars$MrTrigvec
cases(
x<y[1]->0,
x>=y[1] &x<y[3]->2,
x>=y[3] &x<y[4]->3,
x>=y[4] &x<y[5]->4,
x>=y[5] &x<y[6]->5,
x>=y[6] ->6,
)
}
getnumtrips(750)
getnumtrips=function(x){
y=lf2lcrFixedPars$MrTrigvec
cases(
x<y[1]->0,
x>=y[1] &x<y[3]->2,
#x>=y[3] &x<y[4]->3,
#x>=y[4] &x<y[5]->4,
#x>=y[5] &x<y[6]->5,
#x>=y[6] ->6,
)
}
getnumtrips(750)
getnumtrips=function(x){
y=lf2lcrFixedPars$MrTrigvec
cases(
x<y[1]->0,
x>=y[1] &x<y[3]->2,
x>=y[3] &x<y[4]->3,
x>=y[4] &x<y[5]->4,
x>=y[5] &x<y[6]->5,
x>=y[6] ->6
)
}
getnumtrips(760)
lf2lcrFixedPars$MrTrigvec
f2lcrFixedPars=list(InitVec=rep(10,151), #This is the Initial RBT Abundance
#lf2lcrFixedPars=list(InitVec=5*(151:1), #This is the Initial RBT Abundance
MechVec=rep(c(rep(1,3),rep(0,3)),2), #this is the bit that specifies which months CAN have mechanical removal
S=0.96,
MRpass=5,    #Number of MechRem passes
MRpcap=0.1,  #capture probability of each MR pass
UppEndMR=56, #upper end of the removal reach (must be in whole miles)
LowEndMR=66, #lower end of the removal reach (must be in whole miles)
AnnRec=5000, #this is the default if no outmigration pattern is specified
rivm=1:151,  #These are the ending river miles for the 1 mile reaches that we will model
sigma=3.38,  # use for cauchy diffusion
#sigma=9.91,  #use for normal diffusion
logitzeroinf=-20.0, #used to adjust "fidelity" to the average amount of movement
toofar=100,  #used to specify the max movement in a month
meandistmove=0, #used to specify an average amount of movement in miles
startyr=1990,
duration=19,
MrTrigVec=c(760,760,926,1649,2855,4864)
)
lf2lcrFixedPars$MrTrigvec
lf2lcrFixedPars$MrTrigVec
getnumtrips=function(x){
y=lf2lcrFixedPars$MrTrigVec
cases(
x<y[1]->0,
x>=y[1] &x<y[3]->2,
x>=y[3] &x<y[4]->3,
x>=y[4] &x<y[5]->4,
x>=y[5] &x<y[6]->5,
x>=y[6] ->6
)
}
getnumtrips(760)
lf2lcrFixedPars$MrTrigVec
y=lf2lcrFixedPars$MrTrigVec
y[1]
getnumtrips=function(x){
y=lf2lcrFixedPars$MrTrigVec
cases(
x<y[1]->0,
x>=y[1] &x<y[3]->2,
x>=y[3] &x<y[4]->3,
x>=y[4] &x<y[5]->4,
x>=y[5] &x<y[6]->5,
x>=y[6] ->6
)
}
getnumtrips(750)
getnumtrips=function(x){
y=lf2lcrFixedPars$MrTrigVec
cases(
x<y[1]->0,
x>=y[1] &x<y[3]->2,
x>=y[3] &x<y[4]->3,
x>=y[4] &x<y[5]->4,
x>=y[5] &x<y[6]->5,
x>=y[6] ->6
)
}
getnumtrips(770)
x>=y[1] &x<y[3]->2,
lf2lcrFixedPars$MrTrigVec
getnumtrips(760)
getnumtrips(750)
getnumtrips(927)
getnumtrips(1650)
getnumtrips(2854)
getnumtrips(2855)
getnumtrips(4863)
getnumtrips(4865)
warnings()
warnings()
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
#this function uses the number of trips (x) to assign the monthly mechanical removal vector
getnumtrips=function(x){
cases(
x==0->c(0,0,0,0,0,0,0,0,0,0,0,0),
x==1->c(0,0,0,0,0,0,1,0,0,0,0,0),
x==2->c(0,0,0,0,0,1,1,0,0,0,0,0),
x==3->c(0,0,0,0,1,1,1,0,0,0,0,0),
x==4->c(0,0,0,1,1,1,1,0,0,0,0,0),
x==5->c(0,0,1,1,1,1,1,0,0,0,0,0),
x==6->c(0,1,1,1,1,1,1,0,0,0,0,0),
)
}
getnumtrips=function(x){
y=lf2lcrFixedPars$MrTrigVec
cases(
x<y[1]->0,
x>=y[1] &x<y[3]->2,
x>=y[3] &x<y[4]->3,
x>=y[4] &x<y[5]->4,
x>=y[5] &x<y[6]->5,
x>=y[6] ->6
)
}
#this function uses the number of trips (x) to assign the monthly mechanical removal vector
getMechVec=function(x){
cases(
x==0->c(0,0,0,0,0,0,0,0,0,0,0,0),
x==1->c(0,0,0,0,0,0,1,0,0,0,0,0),
x==2->c(0,0,0,0,0,1,1,0,0,0,0,0),
x==3->c(0,0,0,0,1,1,1,0,0,0,0,0),
x==4->c(0,0,0,1,1,1,1,0,0,0,0,0),
x==5->c(0,0,1,1,1,1,1,0,0,0,0,0),
x==6->c(0,1,1,1,1,1,1,0,0,0,0,0),
)
}
source('P:/Git/GCMRC/GCtoLCRver3.R', echo=TRUE)
#this function uses the number of trips (x) to assign the monthly mechanical removal vector
getMechVec=function(x){
cases(
x==0->c(0,0,0,0,0,0,0,0,0,0,0,0),
x==1->c(0,0,0,0,0,0,1,0,0,0,0,0),
x==2->c(0,0,0,0,0,1,1,0,0,0,0,0),
x==3->c(0,0,0,0,1,1,1,0,0,0,0,0),
x==4->c(0,0,0,1,1,1,1,0,0,0,0,0),
x==5->c(0,0,1,1,1,1,1,0,0,0,0,0),
x==6->c(0,1,1,1,1,1,1,0,0,0,0,0),
)
}
source('P:/Git/GCMRC/GCtoLCRver3.R', echo=TRUE)
c(0,0,0,0,0,0,1,0,0,0,0,0)
getMechVec=function(x){
cases(
#     x==0->c(0,0,0,0,0,0,0,0,0,0,0,0),
#     x==1->c(0,0,0,0,0,0,1,0,0,0,0,0),
#     x==2->c(0,0,0,0,0,1,1,0,0,0,0,0),
#     x==3->c(0,0,0,0,1,1,1,0,0,0,0,0),
#     x==4->c(0,0,0,1,1,1,1,0,0,0,0,0),
#     x==5->c(0,0,1,1,1,1,1,0,0,0,0,0),
#     x==6->c(0,1,1,1,1,1,1,0,0,0,0,0),
x==0->0,
x==1->1,
x==2->2,
x==3->3,
x==4->4,
x==5->5,
x==6->6
)
}
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
getMechVec(numtrips)
getMechVec(1)
remreachN=0
mechvec=rep(0,12)
MRTRIG=0
if(yr>lf2lcrFixedPars$startyr){remreachN=sum(AnnResults$rbtvec[63:64])+0.5*AnnResults$rbtvec[65]}
AduChubN=runif(1,6000,6000) #this line is just a placeholder for using predicted HBC abundance
if(AduChubN<7000&remreachN>760){MRTRIG=1}
numtrips=getnumtrips(remreachN)*MRTRIG
MechVec=getMechVec(numtrips)
print(remreachN)
print(numtrips)
print(MechVec)
getMechVec(numtrips)
getMechVec(4)
rep(c(rep(1,3),rep(0,3)),2)
#this function uses the number of trips (x) to assign the monthly mechanical removal vector
getMechVec=function(x){
vec=rep(0,12)
cases(
x==0->vec=c(0,0,0,0,0,0,0,0,0,0,0,0),
x==1->vec=c(0,0,0,0,0,0,1,0,0,0,0,0),
x==2->vec=c(0,0,0,0,0,1,1,0,0,0,0,0),
x==3->vec=c(0,0,0,0,1,1,1,0,0,0,0,0),
x==4->vec=c(0,0,0,1,1,1,1,0,0,0,0,0),
x==5->vec=c(0,0,1,1,1,1,1,0,0,0,0,0),
x==6->vec=c(0,1,1,1,1,1,1,0,0,0,0,0)
)
return(vec)
}
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
warnings()
switch(1,1,2)
switch(2,1,2)
switch(2,c(0,0,0,0,0,1,0,0,0,0,0),2)
switch(1,c(0,0,0,0,0,1,0,0,0,0,0),2)
source('~/.active-rstudio-document', echo=TRUE)
getMechVec(0)
getMechVec(1)
source('~/.active-rstudio-document', echo=TRUE)
getMechVec(0)
getMechVec(1)
getMechVec(6)
source('P:/Git/GCMRC/GCtoLCRver3.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
warnings()
source('~/.active-rstudio-document', echo=TRUE)
warnings()
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('P:/Git/GCMRC/GCtoLCRver3.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('P:/Git/GCMRC/GCtoLCRver3.R', echo=TRUE)
source('P:/Git/GCMRC/GCtoLCRver3.R', echo=TRUE)
source('P:/Git/GCMRC/GCtoLCRver3.R', echo=TRUE)
AnnResults$rbtvec
AnnResults
source('P:/Git/GCMRC/GCtoLCRver3.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('P:/Git/GCMRC/GCtoLCRver3.R', echo=TRUE)
AnnResults$rbtvec
warnings()
plot(1:length(lf2lcrFixedPars$rivm),AnnResults$rbtvec,type='l',ylim=c(0,7500),
main=paste('this is the abundance at the end of December ',yr),xlab='rivermile')
source('~/.active-rstudio-document', echo=TRUE)
plot(lf2lcrFixedPars$startyr:(lf2lcrFixedPars$startyr+lf2lcrFixedPars$duration),RbtByYear[,7],pch=19)
lf2lcrFixedPars$startyr:(lf2lcrFixedPars$startyr+lf2lcrFixedPars$duration)
RbtByYear[,7]
source('~/.active-rstudio-document', echo=TRUE)
AnnResults$rbtmat
RbtByYear
cbind(lf2lcrFixedPars$startyr:(lf2lcrFixedPars$startyr+lf2lcrFixedPars$duration),RbtByYear)
source('P:/Git/GCMRC/GCtoLCRver3.R', echo=TRUE)
source('P:/Git/GCMRC/GCtoLCRver3.R', echo=TRUE)
source('P:/Git/GCMRC/GCtoLCRver3.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('P:/Git/GCMRC/GCtoLCRver3.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('P:/Git/GCMRC/GCtoLCRver3.R', echo=TRUE)
source('P:/Git/GCMRC/GCtoLCRver3.R', echo=TRUE)
source('P:/Git/GCMRC/GCtoLCRver3.R', echo=TRUE)
mu=0
location=0
scale=3.38
sigma=9.91
x=seq(-20,20,by=.1)
dcauch=dcauchy(x,location,scale)
#dcauch=dcauch/sum(dcauch)
plot(x,dcauch,type='l',xlab='Movement Distance (miles)',ylab='Probability',lwd=2)
#mode is:
x[dcauch==max(dcauch)]
lines(x,dnorm(x,mu,sigma),lty=3)
legend('topright',legend=c('Cauchy Movement Distribution','Normal Movement Distribution'),
lty=c(1,3),lwd=c(2,1),bty='n')
rcauch=rcauchy(1000000,location,scale)
#plot(density(rcauch),xlim=range(x))
median(rcauch)
mean(rcauch)
var(rcauch)
